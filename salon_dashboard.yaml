button_card_templates: !include button_card_templates.yaml

views:
  - type: custom:grid-layout
    path: 0
    layout:
      #default
      margin: 0
      grid-gap: var(--custom-layout-card-padding)
      grid-template-columns: repeat(4, 1fr) 0
      grid-template-rows: 0 repeat(2, fit-content(100%)) 0fr
      grid-template-areas: |
        "sidebar  .           .       .       ."
        "sidebar  salon  bureau  cuisine  ."
        "sidebar  chambre     autre       maison       ."
        "sidebar  media       .  .   ."
        "sidebar  footer      footer  footer  ."
      mediaquery:
        #phone
        "(max-width: 800px)":
          grid-gap: calc(var(--custom-layout-card-padding) * 1.7)
          grid-template-columns: 0 repeat(2, 1fr) 0
          grid-template-rows: 0 repeat(5, fit-content(100%)) 0fr
          grid-template-areas: |
            ".  .           .        ."
            ".  sidebar     sidebar  ."
            ".  salon  cuisine   ."
            ".  studio      autre   ."
            ".  chambre     .   ."
            ".  media       maison    ."
            ".  footer      footer   ."
            ".  .           .        ."
        #portrait
        "(max-width: 1200px)":
          grid-gap: var(--custom-layout-card-padding)
          grid-template-columns: repeat(3, 1fr) 0
          grid-template-rows: 0 repeat(3, fit-content(100%)) 0fr
          grid-template-areas: |
            "sidebar  .           .       ."
            "sidebar  salon  cuisine  ."
            "sidebar  chambre     .       ."
            "sidebar  studio      autre  ."
            "sidebar  media       maison   ."
            "sidebar  footer      footer  ."
            "sidebar  .           .       ."
    cards:
      - type: custom:button-card #extra_styles fix
        styles: { card: [display: none] }

      #################################################
      #                                               #
      #                    SIDEBAR                    #
      #                                               #
      #################################################

      - type: vertical-stack
        view_layout:
          grid-area: sidebar
        cards:
          - type: custom:button-card
            entity: sensor.template_sidebar
            template: sidebar

          - type: conditional
            conditions:
              - entity: input_boolean.laundry_display
                state: "on"
            card:
              type: custom:button-card
              entity: timer.laundry
              hold_action:
                action: call-service
                service: input_boolean.turn_off
                service_data:
                  entity_id: input_boolean.laundry_display
              template: laundry

      #################################################
      #                                               #
      #                  Salon                        #
      #                                               #
      #################################################

      - type: grid
        title: Salon
        view_layout:
          grid-area: salon
        columns: 2
        cards:
          - type: light
            entity: light.ampoule_lampadaire_salon
            name: Lampe Salon
            # template:
            #   - light
            #   - icon_hue
            hold_action: more-info

          - type: custom:button-card
            entity: switch.lumiere_buffet_socket_1
            name: Buffet
            hold_action: !include popup/lumiere-buffet.yaml
            template:
              - base
              - icon_shade
              - loader

          - type: custom:button-card
            entity: media_player.samsungtv_011a0220_0a4e_4252_a861_6e651bc4a3bc
            name: TV
            state_display: >
              [[[
                if (variables.state === 'playing') {
                  return 'Sur';
                }
                if (variables.state === true) {
                  return variables.translate_unknown;
                }
              ]]]
            hold_action: !include popup/vardagsrum_tv.yaml
            template:
              - base
              - icon_tv
              - loader

      #################################################
      #                                               #
      #                    Bureau                     #
      #                                               #
      #################################################

      - type: grid
        title: Bureau
        view_layout:
          grid-area: bureau
        columns: 2
        cards:
          - type: custom:button-card
            entity: light.philips_light_strip
            name: Desk light
            template:
              - light
              - icon_hue

          - type: custom:button-card
            entity: light.group_taklampor
            name: Lumière
            template:
              - light
              - icon_spot

          - type: custom:button-card
            entity: sensor.pc_loic_uptime
            name: PC
            hold_action: !include popup/studio_dator.yaml
            template:
              - base
              - icon_imac
              - loader
              - lock
            variables:
              lock: >
                [[[
                  let lock = states['lock.dator'];
                  return lock === undefined || lock.state;
                ]]]
              trigger: >
                [[[
                  let trigger = states['script.home_leave'];
                  return trigger === undefined || trigger;
                ]]]
          - type: custom:button-card
            entity: climate.bureau
            name: Tado
            tap_action: !include popup/tado-bureau.yaml
            template:
              - base
              - icon_climate
              - climate
            variables:
              circle_input: >
                [[[
                  if (entity) {
                    return entity.state === 'cool' ?
                      entity.attributes.temperature :
                      entity.attributes.current_temperature;
                  }
                ]]]

      #################################################
      #                                               #
      #                    Cuisine                     #
      #                                               #
      #################################################

      - type: grid
        title: Cuisine
        view_layout:
          grid-area: cuisine
        columns: 2
        cards:
          - type: custom:button-card
            entity: light.cuisine
            name: Lumière
            template:
              - light
              - icon_lamp

          - type: custom:button-card
            entity: sensor.cuisine_timers
            template:
              - conditional_media
              - icon_nest_mini
              
          - type: custom:button-card
            entity: climate.salon
            name: Tado
            tap_action: !include popup/tado-salon.yaml
            template:
              - base
              - icon_climate
              - climate
            variables:
              circle_input: >
                [[[
                  if (entity) {
                    return entity.state === 'cool' ?
                      entity.attributes.temperature :
                      entity.attributes.current_temperature;
                  }
                ]]]


      #################################################
      #                                               #
      #                    Chambre                    #
      #                                               #
      #################################################

      - type: grid
        title: Chambre
        view_layout:
          grid-area: chambre
        columns: 2
        cards:
          - type: custom:button-card
            entity: light.group_light_chambre
            name: Sänglampor
            template:
              - light
              - icon_lamp
          - type: custom:button-card
            entity: climate.chambre
            name: Tado
            tap_action: !include popup/tado-chambre.yaml
            template:
              - base
              - icon_climate
              - climate
            variables:
              circle_input: >
                [[[
                  if (entity) {
                    return entity.state === 'cool' ?
                      entity.attributes.temperature :
                      entity.attributes.current_temperature;
                  }
                ]]]

      #################################################
      #                                               #
      #                     MEDIA                     #
      #                                               #
      #################################################

      - type: grid
        title: Media
        view_layout:
          grid-area: media
        columns: 1
        cards:
          - type: custom:swipe-card
            parameters:
              speed: 550
              spaceBetween: 40
              threshold: 5
            cards:
              - type: horizontal-stack
                cards:
                  - type: conditional
                    conditions:
                      - entity: select.conditional_media
                        state_not: Vardagsrum

                      - entity: select.conditional_media
                        state_not: Sovrum

                      - entity: select.conditional_media
                        state_not: Spotify

                      - entity: select.conditional_media
                        state_not: Kök
                    card:
                      type: custom:button-card
                      entity: media_player.jellyfin_samsung_smart_tv
                      name: Dernier lu
                      tap_action:
                        action: none
                      template:
                        - conditional_media
                        - icon_jellyfin

                  - type: conditional
                    conditions:
                      - entity: select.conditional_media
                        state: Vardagsrum
                    card:
                      type: custom:button-card
                      entity: media_player.vardagsrum
                      template:
                        - conditional_media
                        - icon_apple_tv

                  - type: conditional
                    conditions:
                      - entity: select.conditional_media
                        state: Sovrum
                    card:
                      type: custom:button-card
                      entity: media_player.cuisine
                      template:
                        - conditional_media
                        - icon_apple_tv

                  - type: conditional
                    conditions:
                      - entity: select.conditional_media
                        state: Spotify
                    card:
                      type: custom:button-card
                      entity: media_player.spotify
                      template:
                        - conditional_media
                        - icon_spotify

                  - type: conditional
                    conditions:
                      - entity: select.conditional_media
                        state: Kök
                    card:
                      type: custom:button-card
                      entity: media_player.kok
                      template:
                        - conditional_media
                        - icon_nest_mini

              - type: grid
                columns: 2
                cards:
                  - type: custom:button-card
                    entity: media_player.vardagsrum
                    name: Vardagsrum
                    template:
                      - media
                      - icon_apple_tv

                  - type: custom:button-card
                    entity: media_player.cuisine
                    name: Sovrum
                    template:
                      - media
                      - icon_apple_tv

                  - type: custom:button-card
                    entity: media_player.spotify
                    name: Spotify
                    template:
                      - media
                      - icon_spotify

                  - type: custom:button-card
                    entity: media_player.kok
                    name: Nest Mini
                    template:
                      - media
                      - icon_nest_mini

      #################################################
      #                                               #
      #                    Autre                      #
      #                                               #
      #################################################

      - type: grid
        title: Autre
        view_layout:
          grid-area: autre
        columns: 2
        cards:
          - type: custom:button-card
            entity: light.group_badrum
            name: Badrum
            template:
              - light
              - icon_bathroom

          - type: custom:button-card
            entity: switch.gosund_fan_switch
            name: "Fläkt\u00B2"
            hold_action: !include popup/studio_flakt.yaml
            template:
              - base
              - icon_fan2
              - loader

          - type: custom:button-card
            entity: light.garderob
            name: Garderob
            template:
              - light
              - icon_closet

          - type: custom:button-card
            entity: light.group_hall
            name: Hall
            template:
              - light
              - icon_spot

      #################################################
      #                                               #
      #                     Maison                    #
      #                                               #
      #################################################

      - type: grid
        title: Maison
        view_layout:
          grid-area: maison
        columns: 2
        cards:
          - type: custom:button-card
            entity: person.loic
            name: Loïc
            triggers_update:
              - sensor.loic_last_changed
            tap_action: !include popup/person_loic.yaml
            variables:
              retain: sensor.loic_last_changed
            template: person

          - type: custom:button-card
            entity: person.emma
            name: Emma
            triggers_update:
              - sensor.emma_last_changed
            tap_action: !include popup/person_emma.yaml
            variables:
              retain: sensor.emma_last_changed
            template: person

          - type: custom:button-card
            entity: script.home_leave
            name: Stäng allt
            hold_action:
              action: none
            template:
              - base
              - icon_away

          - type: custom:button-card
            entity: script.home_arrive
            name: Hemma
            hold_action:
              action: none
            template:
              - base
              - icon_home

      #################################################
      #                                               #
      #                    FOOTER                     #
      #                                               #
      #################################################

      - type: horizontal-stack
        view_layout:
          grid-area: footer
        cards:
          - type: custom:button-card
            name: >
              <ha-icon icon="mdi:nas"></ha-icon> NAS
            tap_action: !include popup/footer/nas.yaml
            variables:
              notify: >
                [[[
                  let status = states['sensor.nas_volume_1_status'],
                    security = states['binary_sensor.nas_security_status'],
                    disk_use = states['sensor.disk_use_percent'],
                    nas_update = states['binary_sensor.nas_update_available'];
                  if (status && security && disk_use && nas_update) {
                    return nas_update.state === 'on'
                      ? 1
                      : status.state === 'background_scrubbing' ||
                        security.state === 'on' ||
                        parseFloat(disk_use.state) >= 85;
                  }
                ]]]
            template: footer

          - type: custom:button-card
            name: >
              <ha-icon icon="mdi:arrow-up-bold-circle-outline"></ha-icon> Uppdatera
            tap_action: !include popup/footer/updater.yaml
            variables:
              notify: >
                [[[
                  let hass_installed = hass.config.version,
                    hass_version_latest = states['sensor.hass_version_latest'],
                    hass_version_latest_beta = states['sensor.hass_version_latest_beta'],
                    hacs = states['sensor.hacs'];

                  if (hass_version_latest && hass_version_latest.state.includes('.')
                    && hass_version_latest_beta && hass_version_latest_beta.state.includes('.')
                    && hacs && Number.isInteger(parseInt(hacs.state))) {

                    let hass_latest = hass_installed.includes('b')
                        ? hass_version_latest_beta.state
                        : hass_version_latest.state,
                      hass_count = hass_installed !== hass_latest ? 1 : 0;
                    return hass_count + parseInt(hacs.state);
                  }
                  return 0;
                ]]]
            template: footer

          - type: custom:button-card
            name: >
              <ha-icon icon="mdi:robot-vacuum-variant"></ha-icon> Städa
            tap_action: !include popup/footer/vacuum.yaml
            variables:
              notify: >
                [[[
                  let last_clean = states['sensor.morty_last_clean_end'],
                    week_ms = 6048e5;
                  if (last_clean) {
                    return (Date.now() - Date.parse(last_clean.state)) > week_ms;
                  }
                ]]]
            template: footer

          # - type: custom:button-card
          #   name: >
          #     <ha-icon icon="mdi:chart-line-variant"></ha-icon> Historik
          #   tap_action:
          #     !include popup/footer/history.yaml
          #   template: footer

          - type: custom:button-card
            name: >
              <ha-icon icon="mdi:tablet"></ha-icon> Platta
            tap_action: !include popup/footer/tablet.yaml
            variables:
              notify: >
                [[[
                  let plugged_in = states['binary_sensor.galaxy_tab_a_plugged_in'];
                  if (plugged_in) {
                    return plugged_in.state === 'off';
                  }
                ]]]
            template: footer

          - type: custom:button-card
            name: >
              <ha-icon icon="mdi:router-wireless"></ha-icon> Router
            tap_action: !include popup/footer/router.yaml
            variables:
              notify: >
                [[[
                  let internet = states['binary_sensor.template_udm_internet'],
                    upgradable = states['binary_sensor.template_udm_upgradable'];
                  if (internet && upgradable) {
                    return upgradable.state === 'on'
                      ? 1
                      : internet.state === 'off';
                  }
                ]]]
            template: footer

          - type: custom:button-card
            name: >
              <ha-icon icon="mdi:raspberry-pi"></ha-icon> RPi
            tap_action: !include popup/footer/rpi.yaml
            variables:
              notify: >
                [[[
                  let ping = states['binary_sensor.rpi_ping'];
                  if (ping) {
                    return ping.state === 'off';
                  }
                ]]]
            template: footer
